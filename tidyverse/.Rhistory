install.packages("tidyverse")
####### get the library ########
library(tidyverse)
##### packages included are: #####
band_instruments
#### dataset ######
View(band_instruments)
View(band_instruments2)
View(band_members)
View(starwars)
murders
data(murders)
install.packages("dslabs")
library(dslabs)
data(murders)
murders
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages("dslabs")
install.packages("nycflights13")
version
version
#### Load the packages ####
library(tidyverse)
library(nycflights13)
##### Dataset : nycflights13::flights ####
# nycflights13: contains the data from all 336,776 flights that departed from New York City in 2013
# Source of the data: US Bureau of Transportation Statistics
flights
colnames(flights)
# Flights that weren't delayed (on arrival or departure) by more than two hours
flights |>
filter(!(arr_delay > 120 | dep_delay > 120))
# or
flights |>
filter(arr_delay <= 120 & dep_delay <= 120)
# create a tibble with NA value in them
df <- tibble(x = c(1, NA, 3))
# now, select rows with NA
df |>
filter(x == NA)
# now, select rows with NA
df |>
filter(is.na(x))
colnames(flights)
# Find all the flights had an arrival delay of two or more hours
flights |>
filter(arr_delay >= 2)
# Find all the flights had an arrival delay of two or more hours
View(flights |>
filter(arr_delay >= 2))
View(flights)
# Flights which flew to Houston (IAH or HOU)
flights |>
filter(dest == "IAH" | dest == "HOU")
# flights operated by United, American, or Delta
flights |>
filter(carrier %in% c("UA", "AA", "DL"))
# flights departed in summer (July, August, and September)
flights |>
filter(month %in% c(7,8,9))
# Arrived more than two hours late, but didnâ€™t leave late
flights |>
filter(arr_delay >= 2 & dep_delay <= 0)
colnames(flights)
# Were delayed by at least an hour, but made up over 30 minutes in flight
flights |>
filter(arr_delay >= 60 & (dep_time - sched_dep_time)>= 30)
# Departed between midnight and 6 a.m. (inclusive)
flights |>
filter(dep_time >= 1 | dep_time <= 6)
# or
flights |>
filter(between(dep_time, 1, 6))
# Departed between midnight and 6 a.m. (inclusive)
flights |>
filter(dep_time >= 1 & dep_time <= 6)
# How many flights have a missing dep_time
flights |>
filter(is.na(dep_time))
#### Arrange ####
# reorder by a column in descending order
flights |>
arrange(desc(arr_delay))
#### Arrange ####
# reorder by a column in descending order
View(flights |>
)
#### Arrange ####
# reorder by a column in descending order
View(flights |>
arrange(desc(arr_delay)))
